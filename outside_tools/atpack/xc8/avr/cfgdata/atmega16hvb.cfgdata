# Generated Wed Aug 12 11:42:00 2020

#
# Copyright (C) 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
# All rights reserved.
#
# This software is developed by Microchip Technology Inc. and its subsidiaries ("Microchip").
#
# Redistribution and use in source and binary forms, with or without modification, are
# permitted provided that the following conditions are met:
#
#     1. Redistributions of source code must retain the above copyright notice, this list of
#        conditions and the following disclaimer.
#
#     2. Redistributions in binary form must reproduce the above copyright notice, this list
#        of conditions and the following disclaimer in the documentation and/or other
#        materials provided with the distribution. Publication is not required when
#        this file is used in an embedded application.
#
#     3. Microchip's name may not be used to endorse or promote products derived from this
#        software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Microchip atmega16hvb Configuration Word Definitions
#
# File Syntax:
# Each configuration register is given as:
#
#     CWORD:<address>:<mask>:<default value>[:<name>[,<alias list>]]
#
# for each CWORD the configuration settings are listed as
#
#     CSETTING:<mask>:<name>[,<alias list>]:<description>
#
# lastly for each CSETTING all possible values are listed as
#
#     CVALUE:<value>:<name>[,<alias list>]:<description>
#
# All numerical values are given in unqualified hex.  In terms of
# #pragma config, note the following correspondence:
#
#    #pragma config CSETTING<name> = CVALUE<name>
#
# Comments are also permitted.  Any line beginning with a '#'
# character will be treated as a comment.

CWORD:00820000:000000FF:000000DD:LOW
CSETTING:00000003:OSCSEL:Oscillator select
CVALUE:00000001:OSCSEL_DEFAULT:Default
CSETTING:0000001C:SUT:Select start-up time
CVALUE:00000000:SUT_14CK_4MS:Start-up time 14 CK + 4 ms
CVALUE:00000001:SUT_14CK_8MS:Start-up time 14 CK + 8 ms
CVALUE:00000002:SUT_14CK_16MS:Start-up time 14 CK + 16 ms
CVALUE:00000003:SUT_14CK_32MS:Start-up time 14 CK + 32 ms
CVALUE:00000004:SUT_14CK_64MS:Start-up time 14 CK + 64 ms
CVALUE:00000005:SUT_14CK_128MS:Start-up time 14 CK + 128 ms
CVALUE:00000006:SUT_14CK_256MS:Start-up time 14 CK + 256 ms
CVALUE:00000007:SUT_14CK_512MS:Start-up time 14 CK + 512 ms
CSETTING:00000020:SPIEN:Serial program downloading (SPI) enabled
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CSETTING:00000040:EESAVE:Preserve EEPROM through the Chip Erase cycle
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CSETTING:00000080:WDTON:Watch-dog Timer always on
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CWORD:00820001:000000FF:000000E9:HIGH
CSETTING:00000001:BOOTRST:Boot Reset vector Enabled
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CSETTING:00000006:BOOTSZ:Select Boot Size
CVALUE:00000003:BOOTSZ_256W_1F00:Boot Flash size=256 words Boot address=$1F00
CVALUE:00000002:BOOTSZ_512W_1E00:Boot Flash size=512 words Boot address=$1E00
CVALUE:00000001:BOOTSZ_1024W_1C00:Boot Flash size=1024 words Boot address=$1C00
CVALUE:00000000:BOOTSZ_2048W_1800:Boot Flash size=2048 words Boot address=$1800
CSETTING:00000008:DWEN:Debug Wire enable
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CSETTING:00000010:CKDIV8:Clock Divide mode
CVALUE:00000000:SET:
CVALUE:00000001:CLEAR:
CWORD:00830000:000000FF:000000FF:LOCKBIT
CSETTING:00000003:LB:Memory Lock
CVALUE:00000000:LB_PROG_VER_DISABLED:Further programming and verification disabled
CVALUE:00000002:LB_PROG_DISABLED:Further programming disabled
CVALUE:00000003:LB_NO_LOCK:No memory lock features enabled
CSETTING:0000000C:BLB0:Boot Loader Protection Mode
CVALUE:00000000:BLB0_LPM_SPM_DISABLE:LPM and SPM prohibited in Application Section
CVALUE:00000001:BLB0_LPM_DISABLE:LPM prohibited in Application Section
CVALUE:00000002:BLB0_SPM_DISABLE:SPM prohibited in Application Section
CVALUE:00000003:BLB0_NO_LOCK:No lock on SPM and LPM in Application Section
CSETTING:00000030:BLB1:Boot Loader Protection Mode
CVALUE:00000000:BLB1_LPM_SPM_DISABLE:LPM and SPM prohibited in Boot Section
CVALUE:00000001:BLB1_LPM_DISABLE:LPM prohibited in Boot Section
CVALUE:00000002:BLB1_SPM_DISABLE:SPM prohibited in Boot Section
CVALUE:00000003:BLB1_NO_LOCK:No lock on SPM and LPM in Boot Section
